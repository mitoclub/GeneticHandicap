library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
# Close the PDF device
dev.off()
# Print the plot to the PDF
print(heatmap_plot)
View(results_df)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
View(results_matrix)
View(results_matrix)
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
View(results_df)
View(results_df)
View(results_matrix)
View(results_df)
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
data.frame(lapply(df$BetaStrength,frac))
data.frame(lapply(results_df$BetaStrength,frac))
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
results_df <- data.frame(lapply(results_df$BetaStrength,frac))
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
results_df <- data.frame(lapply(results_df$BetaStrength,frac))
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
apply(results_df[, BetaStrength], FUN=frac, MARGIN=2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
apply(results_df[, BetaStrength], FUN=frac, MARGIN=2)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
apply(results_df[, BetaStrength], FUN=frac, MARGIN=2)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
apply(results_df[, BetaStrength], FUN=frac, MARGIN=2)
apply(results_df[, 'BetaStrength'], FUN=frac, MARGIN=2)
apply(results_df[, "BetaStrength"], FUN=frac, MARGIN=2)
apply(results_df["BetaStrength"], FUN=frac, MARGIN=2)
results_df <- apply(results_df["BetaStrength"], FUN=frac, MARGIN=2)
results_df["BetaStrength"] <- apply(results_df["BetaStrength"], FUN=frac, MARGIN=2)
results_df$BetaStrength = apply(results_df["BetaStrength"], FUN=frac, MARGIN=2)
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
results_df$BetaStrength = apply(results_df["BetaStrength"], FUN=frac, MARGIN=2)
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
results_df$Var2 = apply(results_df["Var2"], FUN=frac, MARGIN=2)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
# Close the PDF device
dev.off()
# Print the plot to the PDF
print(heatmap_plot)
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
results_df$Var2 = results_df$Var2/100
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
# Print the plot to the PDF
print(heatmap_plot)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 0.1)
# Print the plot to the PDF
print(heatmap_plot)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 100)
# Print the plot to the PDF
print(heatmap_plot)
levelplot( results_matrix,xlab="", ylab="",main="", scales=list(x=list(rot=90,alternating=2)),
col.regions=cols) #heat.colors(100)
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("lattice")) {
install.packages("lattice", dependencies = TRUE)
library(lattice)
}
levelplot( results_matrix,xlab="", ylab="",main="", scales=list(x=list(rot=90,alternating=2)),
col.regions=cols) #heat.colors(100)
cols<- colorRampPalette(c("white","red","violet"))(256)
levelplot( results_matrix,xlab="", ylab="",main="", scales=list(x=list(rot=90,alternating=2)),
col.regions=cols) #heat.colors(100)
lp <- levelplot( results_matrix,xlab="", ylab="",main="", scales=list(x=list(rot=90,alternating=2)),
col.regions=cols) #heat.colors(100)
print(lp)
heatmap(results_matrix)
print(heatmap(results_matrix))
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1) +
scale_x_continuous( trans= 'log10')
# Print the plot to the PDF
print(heatmap_plot)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
results_df$Var2 = results_df$Var2/100
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1) +
scale_x_continuous( trans= 'log10')
# Print the plot to the PDF
print(heatmap_plot)
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
#results_df$Var2 = results_df$Var2/100
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1) +
scale_x_continuous( trans= 'log10')
# Print the plot to the PDF
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
frac <- function(x){
return (x/100)}
apply(results_df[, BetaStrength], FUN=frac, MARGIN=2)
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (ОІ)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
# Print the plot to the PDF
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (β)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (β)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
# Close the PDF device
dev.off()
warnings()
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (β)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Define the range of beta and handicap severity
beta_seq <- seq(0, 0.1, length.out = 100)
handicap_seq <- seq(0, 200, length.out = 100)
# Create an empty matrix to store the results
results_matrix <- matrix(nrow = length(handicap_seq), ncol = length(beta_seq))
# Populate the matrix with the handicap effect (H) values
for(i in 1:length(handicap_seq)) {
for(j in 1:length(beta_seq)) {
beta <- beta_seq[j]
k <- handicap_seq[i]
V <- 1000 # fixed variance
H <- beta * k / (1 + beta * V)
results_matrix[i, j] <- H
}
}
# Convert the matrix to a data frame for plotting
results_df <- melt(results_matrix)
names(results_df) <- c("HandicapSeverity", "BetaStrength", "HandicapEffect")
# Set up PDF output
pdf("handicap_effect_heatmap_2A.pdf", width = 8, height = 6)
# Plot the heatmap
heatmap_plot <- ggplot(results_df, aes(x = BetaStrength, y = HandicapSeverity, fill = HandicapEffect)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = median(results_df$HandicapEffect), limit = c(min(results_df$HandicapEffect), max(results_df$HandicapEffect)),
space = "Lab", name="Handicap Effect") +
theme_minimal() +
labs(x = "Strength of Epistasis (β)", y = "Handicap Severity", title = "Heatmap of Handicap Effect") +
coord_fixed(ratio = 1)
# Print the plot to the PDF
print(heatmap_plot)
warnings()
